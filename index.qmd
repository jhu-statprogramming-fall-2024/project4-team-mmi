---
title: "Weather-Respiratory Diseases Correlation Explorer: Data Analysis"
author: 
  - name: Team MMI
description: "JHSPH 140.777 Statistical Programming Final Project."
date: 2024-12-19
knitr: true
bibliography:
  - my-refs.bib
---

# Team

| Name         |  JHED     | E-mail           |
|--------------|-----------|------------------|
| Juanyu Zhang |  jzhan398 | jzhan398\@jh.edu |
| Yunyi Ru     |  yru3     | yru3\@jh.edu     |

# Project Overview

We want to investigate the correlation between climate and weather-related conditions and outbreaks of two respiratory viruses, influenza and respiratory syncytial virus (RSV).

Influenza is an RNA virus from the *Orthomyxoviridae* family that frequently mutates, causing seasonal epidemics, while RSV is an RNA virus from the *Paramyxoviridae* family that primarily affects young children and the elderly, often leading to severe lower respiratory infections.

Both viruses pose significant public health challenges due to their widespread transmission and potential for severe disease.

Climate and weather conditions can influence the activity and spread of both viruses. Studies have suggested that factors like cold temperatures, low indoor humidity, limited sunlight, and rapid weather changes may increase the risk of outbreaks [@carter-templeton_associations_2022] [@chong_association_2022] [@fdez-arroyabe_effects_2021] [@linssen_association_2021].

# Project Goals

In this project, we plan to integrate weather data and disease incidence data together to perform correlation and regression analysis, and to build an interactive dashboard showing those relationships. If possible, we also want to build a machine learning model to predict potential disease outbreaks based on weather data.

啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊啊

# Project

## Set Up

```{r set_up, message = FALSE, warning = FALSE}
library('here')
library('tidyverse')
library('ggplot2')
theme_set(theme_bw())
library('lubridate')
library('knitr')
library('RSocrata') # a package to read socrata data - which is the way CDC datasets are stored. see CRAN documentation here: https://cran.r-project.org/web/packages/RSocrata/index.html
library('openmeteo') # a package to scrap data from openmeteo API. see CRAN documentation here: https://cran.r-project.org/web/packages/openmeteo/openmeteo.pdf
library('reshape2')
```

## Load Data

Disease rate data were scrapped from CDC RESP-NET API.

[RESP-NET](https://data.cdc.gov/Public-Health-Surveillance/Rates-of-Laboratory-Confirmed-RSV-COVID-19-and-Flu/kvib-3txy/about_data)

[RESP-NET API Socrata](https://dev.socrata.com/foundry/data.cdc.gov/kvib-3txy)

```{r load_data_RESP}
# extract data
rds_files <- c("RSVdat.RDS", 
               "fludat.RDS",
               "weather.RDS")

# Check whether we have all files
if (any(!file.exists(here("data", rds_files)))) {
  # If we don't, then download the data
  RSVdat <- read.socrata('https://data.cdc.gov/resource/kvib-3txy.json?surveillance_network=RSV-NET&age_group=Overall&sex=Overall&race_ethnicity=Overall')
  fludat <- read.socrata('https://data.cdc.gov/resource/kvib-3txy.json?surveillance_network=FluSurv-NET&age_group=Overall&sex=Overall&race_ethnicity=Overall')
  # Then save the data objects to RDS files
  saveRDS(RSVdat, file = here("data", "RSVdat.RDS"))
  saveRDS(fludat, file = here("data", "fludat.RDS"))
}

# load data
RSVdat <- readRDS(here("data", "RSVdat.RDS"))
fludat <- readRDS(here("data", "fludat.RDS"))

# have a look at the data
kable(head(RSVdat))
kable(head(fludat))
union(unique(RSVdat$site), unique(fludat$site))
union(unique(RSVdat$season), unique(fludat$season))
```

As is shown here, the RESP-NET data contains weekly disease incident data from 15 different states (Utah, Tennessee, Oregon, New York, New Mexico, Minnesota, Michigan, Maryland, Georgia, Connecticut, Colorado, California, North Carolina, Ohio, and Iowa - 'Overall' should be excluded) and 7 flu seasons (2018 to 2024).

We then need to get weather data for those states in those time periods using the OpenMeteo API. We are using the coordinates for the geographic centers \[you should add a ref link here!\] for each state here.

```{r load_data_weather}
# Define the function to fetch weather data and add site information
fetch_weather_data <- function(state, lat, lon) {
  weather_data <- weather_history(
    c(lat, lon),
    start = "2018-01-01",
    end = "2024-11-30",
    daily = c(
      "weather_code",
      "temperature_2m_max",
      "temperature_2m_min",
      "precipitation_sum",
      "precipitation_hours",
      "sunshine_duration",
      "daylight_duration",
      "wind_speed_10m_max",
      "wind_gusts_10m_max",
      "wind_direction_10m_dominant",
      "shortwave_radiation_sum",
      "et0_fao_evapotranspiration"
    )
  )
  weather_data <- weather_data %>%
    mutate(site = state)
}

# check whether we have the file
if (!file.exists(here('data', 'weather.RDS'))) {
# if not, fetch data for each state using openmeteo
wUtah <- fetch_weather_data("Utah", 39.3055, -111.6703)
wTennessee <- fetch_weather_data("Tennessee", 35.858, -86.3505)
wOregon <- fetch_weather_data("Oregon", 43.9336, -120.5583)
wNewYork <- fetch_weather_data("New York", 42.9538, -75.5268)
wNewMexico <- fetch_weather_data("New Mexico", 34.4071, -106.1126)
wMinnesota <- fetch_weather_data("Minnesota", 46.2807, -94.3053)
wMichigan <- fetch_weather_data("Michigan", 44.3467, -85.4102)
wMaryland <- fetch_weather_data("Maryland", 39.0550, -76.7909)
wGeorgia <- fetch_weather_data("Georgia", 32.6415, -83.4426)
wConnecticut <- fetch_weather_data("Connecticut", 41.6219, -72.7273)
wColorado <- fetch_weather_data("Colorado", 38.9972, -105.5478)
wCalifornia <- fetch_weather_data("California", 37.1841, -119.4696)
wNorthCarolina <- fetch_weather_data("North Carolina", 35.5557, -79.3877)
wOhio <- fetch_weather_data("Ohio", 40.2862, -82.7937)
wIowa <- fetch_weather_data("Iowa", 42.0751, -93.4960)

weather <- rbind(wUtah, wTennessee, wOregon, wNewYork, wNewMexico, wMinnesota, wMichigan, wMaryland, wGeorgia, wConnecticut, wColorado, wCalifornia, wNorthCarolina, wOhio, wIowa)

saveRDS(weather, file = here("data", "weather.RDS"))
}

# load data
weather <- readRDS(here("data", "weather.RDS"))

# have a look
kable(head(weather))
```

## Data Wrangling

```{r data_wrangling}
# Processing weather data
# lubridate
weather <- weather %>%
  mutate(date = ymd(date),
         week = epiweek(date),
         year = year(date),
         y_w = paste(year, week, sep = "_"))

# from daily to weekly weather data (all average)
week_weather <- weather %>%
  group_by(y_w, site, year, week) %>%
  summarise(
         temp_max = mean(daily_temperature_2m_max),
         temp_min = mean(daily_temperature_2m_min), 
         precip_sum = mean(daily_precipitation_sum),
         precip_hr = mean(daily_precipitation_hours), 
         sunshine = mean(daily_sunshine_duration), 
         daylight = mean(daily_daylight_duration),
         wind_speed_max = mean(daily_wind_speed_10m_max),
         wind_gusts_max = mean(daily_wind_gusts_10m_max), 
         wind_direction = atan2(mean(sin(daily_wind_direction_10m_dominant * pi / 180)), mean(cos(daily_wind_direction_10m_dominant * pi / 180))) * 180 / pi %% 360,
         wind_direction = if_else(wind_direction < 0, wind_direction + 360, wind_direction), # calculate wind direction average
         shortwave = mean(daily_shortwave_radiation_sum),
         evapo = mean(daily_et0_fao_evapotranspiration)
  ) %>%
  mutate(across(where(is.numeric), ~ round(., 2)), # round
    wind_direction_cardinal = case_when(
      wind_direction >= 0 & wind_direction < 22.5 ~ "N",
      wind_direction >= 22.5 & wind_direction < 45 ~ "NNE",
      wind_direction >= 45 & wind_direction < 67.5 ~ "NE",
      wind_direction >= 67.5 & wind_direction < 90 ~ "ENE",
      wind_direction >= 90 & wind_direction < 112.5 ~ "E",
      wind_direction >= 112.5 & wind_direction < 135 ~ "ESE",
      wind_direction >= 135 & wind_direction < 157.5 ~ "SE",
      wind_direction >= 157.5 & wind_direction < 180 ~ "SSE",
      wind_direction >= 180 & wind_direction < 202.5 ~ "S",
      wind_direction >= 202.5 & wind_direction < 225 ~ "SSW",
      wind_direction >= 225 & wind_direction < 247.5 ~ "SW",
      wind_direction >= 247.5 & wind_direction < 270 ~ "WSW",
      wind_direction >= 270 & wind_direction < 292.5 ~ "W",
      wind_direction >= 292.5 & wind_direction < 315 ~ "WNW",
      wind_direction >= 315 & wind_direction < 337.5 ~ "NW",
      wind_direction >= 337.5 & wind_direction <= 360 ~ "NNW",
      TRUE ~ NA_character_
    ) # set cardinal for wind data
  ) %>%
  ungroup()

# Processing flu and RSV data
# rbind
RESPdat <- rbind(fludat, RSVdat)
# check if all overall data
unique(RESPdat$age_group)
unique(RESPdat$sex)
unique(RESPdat$race_ethnicity)
# basic data wrangling, lubridate
RESPdat.clean <- RESPdat %>%
  filter(site != 'Overall') %>% # exclude overall data
  mutate(date = ymd_hms(X_weekenddate),
         mmwr_year = round(as.numeric(mmwr_year, 0)),
         mmwr_week = round(as.numeric(mmwr_week, 0)), 
         year = year(date),
         week = epiweek(date),
         y_w = paste(mmwr_year, mmwr_week, sep = "_"),
         pathogen = ifelse(surveillance_network == "RSV-NET", "RSV", "influenza")
         ) %>%
  select(-mmwr_year, -mmwr_week, -surveillance_network, -season, -age_group, -sex, -race_ethnicity, -X_weekenddate, -type)

# melt to long data
week_weather_melted <- melt(week_weather, 
                          id.vars = c("week", "site", "year"), 
                          measure.vars = c("temp_max", "temp_min", "precip_sum", "precip_hr", "sunshine", "daylight", "wind_speed_max", "wind_gusts_max", "shortwave", "evapo"), 
                          variable.name = "type", 
                          value.name = "value")

# bind RESPdat.clean and week_weather together
RESP_weather <- left_join(RESPdat.clean, week_weather, by = c("y_w", "site", "year", "week"))
RESP_weather <- RESP_weather %>%
  drop_na() %>%
  mutate(weekly_rate = as.numeric(weekly_rate), 
         cumulative_rate = as.numeric(cumulative_rate))

# have a look!
kable(head(RESP_weather))

# save data
saveRDS(RESP_weather, file = here("data", "RESP_weather.RDS"))
```

## Data Visualization

```{r}
# basic respiratory virus data visualization
# influenza
RESP_weather_flu <- RESP_weather %>%
  filter(pathogen == "influenza")

ggplot(RESP_weather_flu, aes(x = week, y = weekly_rate, color = as.character(year))) +
  geom_rect(aes(xmin = -Inf, xmax = 20, ymin = -Inf, ymax = Inf), inherit.aes = FALSE, fill = "#eeeeee", alpha = 1) +
  geom_rect(aes(xmin = 40, xmax = Inf, ymin = -Inf, ymax = Inf), inherit.aes = FALSE, fill = "#eeeeee", alpha = 1) +
  facet_wrap(~site) +
  geom_point(size = 0.5) +
  geom_line() +
  scale_color_brewer(palette = 'Set2') +
  labs(
      title = 'Weekly Rates of Influenza-Associated Hospitalizations by State, from 2018 to 2024',
      subtitle = 'Data Source: CDC RESP-NET',
      caption = 'Biostats 140.777 Project 4, Team MMI',
      y = 'Hospitalization rate per 100,000',
      x = 'Epidemiology Week', 
      color = 'Year'
   )

# rsv
RESP_weather_RSV <- RESP_weather %>%
  filter(pathogen == "RSV")

ggplot(RESP_weather_RSV, aes(x = week, y = weekly_rate, color = as.character(year))) +
  geom_rect(aes(xmin = -Inf, xmax = 20, ymin = -Inf, ymax = Inf), inherit.aes = FALSE, fill = "#eeeeee", alpha = 1) +
  geom_rect(aes(xmin = 40, xmax = Inf, ymin = -Inf, ymax = Inf), inherit.aes = FALSE, fill = "#eeeeee", alpha = 1) +
  facet_wrap(~site) +
  geom_point(size = 0.5) +
  geom_line() +
  scale_color_brewer(palette = 'Set2') +
  labs(
      title = 'Weekly Rates of RSV-Associated Hospitalizations by State, from 2018 to 2024',
      subtitle = 'Data Source: CDC RESP-NET',
      caption = 'Biostats 140.777 Project 4, Team MMI',
      y = 'Hospitalization rate per 100,000',
      x = 'Epidemiology Week', 
      color = 'Year'
   )
```

### Correlation Heatmap

```{r}
# corr heatmap
# all relationship
library('corrplot')
RESP_weather_corr <- RESP_weather %>%
  select(-cumulative_rate, -year, -week)
corr_matrix <- cor(RESP_weather_corr %>% select_if(is.numeric), use = 'complete.obs')
corrplot(corr_matrix, type = 'lower', diag = FALSE)
```
